swagger: '2.0'
info:
  version: '0.1.0'
  title: User API
  description: API to Login, Logout and register
  termsOfService: none
  contact:
    name: Open Affect API team
    email: info@openaffect.io
    url: http://openaffect.io
  license:
    name: MIT
    url: http://opensource.org/licenses/MIT
host: 192.168.99.100:8080
basePath: /api
schemes:
- "https"
- "http"
paths:
  /login:
    post:
      description: allow a user to connect
      operationId: login
      consumes:
        - application/json
      parameters:
        - name: credentials
          in: body
          description: name and password
          required: true
          schema:
            $ref: '#/definitions/credentials'
      responses:
        '201':
          description: no body
          schema:
            $ref: '#/definitions/jwttoken'
        '401':
          description: "Wrong password or username"
        '404':
          description: "User not found"
  /signin:
    post:
      description: allow a user to create an account
      operationId: signin
      consumes:
        - application/json
      parameters:
        - name: player
          in: body
          description: all player information
          required: true
          schema:
            $ref: '#/definitions/player'
      responses:
        '201':
          description: no body
          schema:
            $ref: '#/definitions/jwttoken'
        '409':
          description: "Username already exists"
  /logout:
    post:
      description: allow a user to logout
      operationId: logout
      parameters:
        - $ref: '#/parameters/TokenHeader'
      responses:
        '201':
          description: no body
          schema:
            type: object
definitions:
  credentials:
    type: object
    required:
      - username
      - password
    properties:
      username:
        type: string
      password:
        type: string
  jwttoken:
    type: object
    required:
      - token
    properties:
      token:
        type: string
  player:
    type: object
    required:
      - username
      - password
      - strength
      - dexterity
      - constitution
      - intelligence
      - wisdom
      - charisma
      - fkRace    
      - fkClasse
    properties:
      usename:
        type: string
      password:
        type: string
      strength:
        type: integer
      dexterity:
        type: integer
      constitution:
        type: integer
      intelligence:
        type: integer
      wisdom:
        type: integer
      charisma:
        type: integer
      fkRace:
        type: string
      fkClasse:
        type: string
parameters:
  TokenHeader:
    description: header that contain a JwtToken
    name: x-dnd-token
    in: header
    required: true
    type: string