swagger: '2.0'
info:
  version: '0.1.0'
  title: User API
  description: API to Login, Logout and register
host: localhost
basePath: /api
schemes:
  - http
paths:
  /login:
    post:
      description: allow a user to connect
      operationId: login
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: credentials
          in: body
          description: name and password
          required: true
          schema:
            $ref: '#/definitions/credentials'
      responses:
        '200':
          description: a jwttoken
          schema:
            $ref: '#/definitions/jwttoken'
        '403':
          description: "Wrong password"
        '404':
          description: "User not found"
        '423':
          description: "User locked"
  /changepassword:
    post:
      description: allow a user to connect
      operationId: changepassword
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: passwords
          in: body
          description: name and password
          required: true
          schema:
            $ref: '#/definitions/passwords'
        - $ref: '#/parameters/TokenHeader'
      responses:
        '200':
          description: "Password changed"
        '404':
          description: "Wrong password or username"
        '423':
          description: "User locked"
  /register:
    post:
      description: allow a user to create an account
      operationId: register
      consumes:
        - application/json
      produces:
        - application/json
      parameters:
        - name: utilisateur
          in: body
          description: all player information
          required: true
          schema:
            $ref: '#/definitions/utilisateur'
      responses:
        '201':
          description: a jwttoken
          schema:
            $ref: '#/definitions/jwttoken'
        '409':
          description: "Username already exists"
  /adminplayer:
    get:
      description: allow an administrator to see all player
      operationId: adminplayer
      parameters:
        - $ref: '#/parameters/TokenHeader'
        - $ref: '#/parameters/pagination'
      responses:
        '200':
          description: "all the players"
          schema:
            type: array
            items:
              $ref: '#/definitions/utilisateur'
        '403':
          description: no body
          schema:
            type: object
    post:
      description: allow an administrator to lock/unlock a player
      operationId: manageplayer
      parameters:
        - $ref: '#/parameters/TokenHeader'
        - name: simpleuser
          in: "body"
          description: "ID of the player to lock/unlock"
          required: true
          schema:
            $ref: '#/definitions/simpleuser'
      responses:
        '200':
          description: "all the players"
          schema:
            type: array
            items:
              $ref: '#/definitions/utilisateur'
        '403':
          description: no body
          schema:
            type: object
definitions:
  credentials:
    type: object
    required:
      - id
      - password
    properties:
      id:
        type: string
      password:
        type: string
  jwttoken:
    type: object
    required:
      - token
    properties:
      token:
        type: string
  passwords:
    type: object
    required:
      - oldpassword
      - newpassword
    properties:
      oldpassword:
        type: string
      newpassword:
        type: string
  simpleuser:
    type: object
    required:
      - userid
    properties:
      userid:
        type: string
  utilisateur:
    type: object
    required:
      - email
      - password
      - administrator
      - blocked
    properties:
      email:
        type: string
      password:
        type: string
      administrator:
        type: boolean
      blocked:
        type: boolean
parameters:
  TokenHeader:
    description: header that contain a JwtToken
    name: x-dnd-token
    in: header
    required: true
    type: string
  pagination:
    in: query
    name: pagination
    required: false
    type: integer
    minimum: 0
    description: The number of the page